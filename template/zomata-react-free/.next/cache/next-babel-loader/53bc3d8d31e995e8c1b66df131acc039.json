{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport './index.scss';\nimport App from 'next/app';\nimport { Provider } from 'react-redux';\nimport React from 'react';\nimport withRedux from \"next-redux-wrapper\";\nimport store from '../redux/store';\nimport { loadIcons } from '../utils/IconLoader';\nloadIcons();\n\nvar MyApp = /*#__PURE__*/function (_App) {\n  _inherits(MyApp, _App);\n\n  var _super = _createSuper(MyApp);\n\n  function MyApp() {\n    _classCallCheck(this, MyApp);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MyApp, [{\n    key: \"render\",\n    value: function render() {\n      //Page props that were returned  from 'getInitialProps' are stored in the props i.e. pageprops\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps,\n          store = _this$props.store;\n      return __jsx(Provider, {\n        store: store\n      }, __jsx(Component, pageProps));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n        var Component, ctx, pageProps;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                Component = _ref.Component, ctx = _ref.ctx;\n\n                if (!Component.getInitialProps) {\n                  _context.next = 7;\n                  break;\n                }\n\n                _context.next = 4;\n                return Component.getInitialProps(ctx);\n\n              case 4:\n                _context.t0 = _context.sent;\n                _context.next = 8;\n                break;\n\n              case 7:\n                _context.t0 = {};\n\n              case 8:\n                pageProps = _context.t0;\n                return _context.abrupt(\"return\", {\n                  pageProps: pageProps\n                });\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return MyApp;\n}(App); //makeStore function that returns a new store for every request\n\n\nvar makeStore = function makeStore() {\n  return store;\n}; //withRedux wrapper that passes the store to the App Component\n\n\nexport default withRedux(makeStore)(MyApp);","map":{"version":3,"sources":["/Users/akbarramadhan/development/saoherbal/template/zomata-react-free/src/pages/_app.js"],"names":["App","Provider","React","withRedux","store","loadIcons","MyApp","props","Component","pageProps","ctx","getInitialProps","makeStore"],"mappings":";;;;;;;;;;;;;AAAA,OAAO,cAAP;AACA,OAAOA,GAAP,MAAgB,UAAhB;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,SAASC,SAAT,QAA0B,qBAA1B;AAEAA,SAAS;;IAEHC,K;;;;;;;;;;;;;WASF,kBAAS;AACL;AACA,wBAAsC,KAAKC,KAA3C;AAAA,UAAOC,SAAP,eAAOA,SAAP;AAAA,UAAkBC,SAAlB,eAAkBA,SAAlB;AAAA,UAA6BL,KAA7B,eAA6BA,KAA7B;AAEA,aACI,MAAC,QAAD;AAAU,QAAA,KAAK,EAAEA;AAAjB,SACI,MAAC,SAAD,EAAeK,SAAf,CADJ,CADJ;AAKH;;;;sFAhBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8BD,gBAAAA,SAA9B,QAA8BA,SAA9B,EAAyCE,GAAzC,QAAyCA,GAAzC;;AAAA,qBACsBF,SAAS,CAACG,eADhC;AAAA;AAAA;AAAA;;AAAA;AAAA,uBACwDH,SAAS,CAACG,eAAV,CAA0BD,GAA1B,CADxD;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,8BACyF,EADzF;;AAAA;AACUD,gBAAAA,SADV;AAAA,iDAIW;AAACA,kBAAAA,SAAS,EAAEA;AAAZ,iBAJX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;EAFgBT,G,GAqBpB;;;AACA,IAAMY,SAAS,GAAG,SAAZA,SAAY;AAAA,SAAMR,KAAN;AAAA,CAAlB,C,CAEA;;;AACA,eAAeD,SAAS,CAACS,SAAD,CAAT,CAAqBN,KAArB,CAAf","sourcesContent":["import './index.scss';\nimport App from 'next/app';\nimport {Provider} from 'react-redux';\nimport React from 'react';\nimport withRedux from \"next-redux-wrapper\";\nimport store from '../redux/store';\nimport { loadIcons } from '../utils/IconLoader';\n\nloadIcons();\n\nclass MyApp extends App {\n\n    static async getInitialProps({Component, ctx}) {\n        const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\n\n        //Anything returned here can be accessed by the client\n        return {pageProps: pageProps};\n    }\n\n    render() {\n        //Page props that were returned  from 'getInitialProps' are stored in the props i.e. pageprops\n        const {Component, pageProps, store} = this.props;\n\n        return (\n            <Provider store={store}>\n                <Component {...pageProps}/>\n            </Provider>\n        );\n    }\n}\n\n//makeStore function that returns a new store for every request\nconst makeStore = () => store;\n\n//withRedux wrapper that passes the store to the App Component\nexport default withRedux(makeStore)(MyApp);\n\n"]},"metadata":{},"sourceType":"module"}